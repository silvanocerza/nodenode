name: Check stuff

on:
  pull_request:

jobs:
  integration-test-pypy:
    name: "integration test | pypy on ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}-latest
    strategy:
      matrix:
        include:
          - runs-on: "ubuntu"
            platform: "linux"
            binaries_path: ".venv/bin"
            expected_binaries: ["pypy", "pypy3", "python"]
          - runs-on: "windows"
            platform: "windows"
            binaries_path: ".venv\\Scripts"
            expected_binaries:
              [
                "pypy3.10.exe",
                "pypy3.10w.exe",
                "pypy3.exe",
                "pypyw.exe",
                "python.exe",
                "python3.10.exe",
                "python3.exe",
                "pythonw.exe",
              ]

      fail-fast: false

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "pypy3.9"

      - name: PyPy info
        shell: bash
        run: which pypy

      - name: "Create a virtual environment"
        shell: bash
        run: |
          $(which pypy) -m venv .venv

      - name: "Check for executables"
        shell: python
        run: |
          import sys
          import json
          from pathlib import Path

          def binary_exist(binary):
            binaries_path = Path("${{ matrix.binaries_path }}")
            if (binaries_path / binary).exist():
              return True
            print(f"Executable '{binary}' not found in folder '{binaries_path}'.")

          all_found = True
          expected_binaries = json.loads(${{ matrix.expected_binaries }})
          for binary in expected_binaries:
            if not binary_exist(binary):
              all_found = False

          if not all_found:
            print("One or more expected executables were not found.")
            sys.exit(1)

      - name: "Check version"
        shell: bash
        run: |
          .venv/bin/python --version

      - name: "Check install"
        shell: bash
        run: |
          pip install anyio
